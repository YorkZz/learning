import bisect

delimiter = " - "
print()
print("---------------- instantiating ----------------")
print("[3, 5, 7, 11]", delimiter, [3, 5, 7, 11])
print("[1] + [0] * 10", delimiter, [1] + [0] * 10)
print("list(range(30))", delimiter, list(range(30)))
print()
print("---------------- basic operations ----------------")
A = [0, 11, 21, 31, 2]
print("A = [0, 1, 2, 3, 4]")
print("len(A)", delimiter, len(A))
A.append(42)
print("A.append(42)", delimiter, A)
A.remove(2)
print("A.remove(2)", delimiter, A)
A.insert(3, 28)
print("A.insert(3, 28)", delimiter, A)
print("min(A)", delimiter, min(A))
print("max(A)", delimiter, max(A))
print()
print("---------------- bitsec ----------------")
A = list(range(10))
print("A = list(range(10))")
print("bisect.bisect_left(A, 5)", delimiter, bisect.bisect_left(A, 5))
print("bisect.bisect_right(A, 5)", delimiter, bisect.bisect_right(A, 5))
print("bisect.bisect(A, 5)", delimiter, bisect.bisect(A, 5))
print()
print("---------------- reverse ----------------")
print("A = [5, 4, 6, 3, 7, 2, 8, 0, 9, 1]")
print("reversed(A)", delimiter, reversed(A))
print("list(reversed(A))", delimiter, list(reversed(A)))
print()
print("---------------- slicing ----------------")
A = [1, 6, 3, 4, 5, 2, 7]
print("A = [1, 6, 3, 4, 5, 2, 7]")
print("---- format: A[start:stop:step] ----")
print("A[2:4]", delimiter, A[2:4])
print("A[2:]", delimiter, A[2:])
print("A[:4]", delimiter, A[:4])
print("A[:-1]", delimiter, A[:-1])
print("A[-3:]", delimiter, A[-3:])
print("A[-3:-1]", delimiter, A[-3:-1])
print("A[1:5:2]", delimiter, A[1:5:2])
print("A[5:1:-2]", delimiter, A[5:1:-2])
print("A[::-1]", delimiter, A[::-1])
print("A[3:] + A[:3]", delimiter, A[3:] + A[:3])
print()
print("---------------- list comprehension ----------------")
print("[x**2 for x in range(6)]", delimiter, [x**2 for x in range(6)])
print("[x**2 for x in range(6) if x % 2 == 0]", delimiter, [x**2 for x in range(6) if x % 2 == 0])
A, B = [1, 3, 5], ['a', 'b']
print("A, B = [1, 3, 5], ['a', 'b']")
print("[(x, y) for x in A for y in B]", delimiter, [(x, y) for x in A for y in B])
M = [['a', 'b', 'c'], ['d', 'e','f']] 
print("M = [['a', 'b', 'c'], ['d', 'e','f']] ")
print("[x for row in M for x in row]", delimiter, [x for row in M for x in row])
A = [[1, 2, 3], [4, 5, 6]]
print("A = [[1, 2, 3], [4, 5, 6]]")
print("[[x**2 for x in row] for row in A]", delimiter, [[x**2 for x in row] for row in A])
print("[x**2 for row in A for x in row]", delimiter, [x**2 for row in A for x in row])
print()